name: Test DBOS

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest

    # Service container for Postgres
    services:
      # Label used to access the service container.
      postgres:
        image: postgres:16.1
        env:
          # Specify the password for Postgres superuser.
          POSTGRES_PASSWORD: dbos
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: "Setup postgres config"
        run: |
          docker exec -i ${{ job.services.postgres.id }} apt update
          docker exec ${{ job.services.postgres.id }} sh -c 'echo "wal_level=logical" >> /var/lib/postgresql/data/postgresql.conf'
          docker restart ${{ job.services.postgres.id }}
      - uses: actions/checkout@v4.1.1
      - name: Use Node.js 20
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 20
      - name: Compile and Test
        working-directory: ./
        run: |
          npm ci
          npm run build
          npm test
          npm run lint
        env:
          PGPASSWORD: dbos
          DB_PASSWORD: dbos
          DB_USER: postgres
          NPM_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SILENCE_LOGS: true
